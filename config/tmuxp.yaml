session_name: jg-c-w5
start_directory: /home/sy/jg/03.c-language/me
suppress_history: false
windows:
  - window_name: document
    focus: true
    layout: 72b5,240x74,0,0{170x74,0,0,85,69x74,171,0,86}
    panes:
      - shell_command: vi -c 'cd ~/Documents/dev-wiki | VimwikiIndex'
        focus: true
      - shell_command:
          - tm.1_title 'TODO'
          - vi README.md

  - window_name: ai
    panes:
      - shell_command: vi -c CodeCompanionChat -c only

  - window_name: code & build
    layout: e15c,240x66,0,0{186x66,0,0,114,53x66,187,0,115}
    start_directory: /home/sy/jg/03.c-language/me/src
    panes:
      - shell_command:
          - tm.1_title 'editor'
          - vi .
        focus: true
      - shell_command:
          - tm.1_title 'build for debugging'
          - cmd: gcc -g -O0 <src>
            enter: false

  - window_name: debug
    start_directory: /home/sy/jg/03.c-language/me/src
    panes:
      - shell_command:
          - tm.1_title 'debugger'
          - cmd: "tmux select-window -t ':debug'"
          - cmd: "gdb"
            sleep_after: 1
          - directory .
          - cmd: "target extended-remote localhost:1234"
            enter: false

  - window_name: docker
    layout: main-vertical
    options:
      main-pane-width: 60%
    panes:
      - shell_command:
          - tm.1_title 'current container'
          - docker exec -it jg-c-w5 bash
          - cmd: "gdbserver :1234 hello "
            enter: false
        focus: true
      - shell_command: vi config/Dockerfile
      - shell_command:
          - tm.1_title 'build image'
          - cmd: docker build -t jg-c-w5 config/
            enter: false
      - shell_command:
          - tm.1_title 'run daemon container'
          - cmd: docker run -d --name jg-c-w5 -v "$(git-root)/src:/workspace" --network=host jg-c-w5
            enter: false
      - shell_command: lazydocker

  - window_name: config
    layout: even-horizontal
    panes:
      - shell_command: vi config/tmuxp.yaml
